name: photo-album-generator
version: "3.9"
services:

  # database:
  #   build: ./backend
  #   # container_name: photo-album-gen-database
  #   command: [ "--app", "flaskr", "init-db" ]

  backend:
    image: jigneshsatam/backend:latest
    build: backend/.
    volumes:
      - ./Photo-Generator-Pictures:/app/uploads
      - ./backend:/app
    environment:
      FLASK_DEBUG: "true"
    networks:
      - photo_album_generator_nw
    depends_on:
      # - database
      - cache

  frontend:
    image: jigneshsatam/frontend:latest
    build: frontend/aespa/
    volumes:
      - ./Photo-Generator-Pictures:/usr/share/nginx/html/assets/uploads/
      - ./Photo-Generator-Pictures:/app/src/assets/uploads/
    ports:
      - "4200:80"
    networks:
      - photo_album_generator_nw

  frontend-dev:
    image: jigneshsatam/frontend-dev:latest
    build:
      context: ./frontend/aespa
      dockerfile: Dockerfile-dev
    volumes:
      - ./frontend/aespa:/app
      - ./Photo-Generator-Pictures:/app/src/assets/uploads/
    ports:
      - "4300:4200"
    networks:
      - photo_album_generator_nw
    command: npm start

  cache:
    image: "redis:alpine"
    networks:
      - photo_album_generator_nw

  loadbalancer:
    image: jigneshsatam/loadbalancer:latest
    build: loadbalancer/.
    depends_on:
      - backend
    ports:
      - "8827:4000"
    networks:
      - photo_album_generator_nw

networks:
  photo_album_generator_nw:

    # test-script:
    #   build: test-script/ubuntu/.
    #   container_name: test-script
    #   volumes:
    #     - ./:/app
